I"è(<p>Hello, welcome to my blog! This post will explore COVID-19 related clinical trials. If you are interested, please visit my <strong><a href="https://github.com/eveyimi/eveyimi.github.io">GitHub</a></strong> for more information.</p>

<h1 id="introduction">Introduction</h1>

<p>The following are ongoing and completed COVID-19 studies listed on the World Health Organization‚Äôs International Clinical Trials Registry Platform (WHO ICTRP). Information in the WHO ICTRP comes from clinical trial databases maintained by other countries or regions of the world. COVID-19 studies listed on ClinicalTrials.gov are not included in the list below, but can be found using our search for COVID-19.
To give researchers and the public rapid access to studies on COVID-19 in other countries, ClinicalTrials.gov will update this list weekly. You can also access the information directly from the WHO ICTRP.</p>

<p>We developed a dashboard to display the information related to COVID-19 related clinical trials, including data visualization of world trials and U.S. trials, clustering tirals by similarity and predicting trials‚Äô opening status. Our audience of visualization parts could be any people who are curious about COVID-19 related clinical trials even without professional knowledge since all plots are intuitive and easy to understand. But for the clustering part and predicting part, our audience needs to have some knowledge of statistics. We all know that clinical research is a crucial step to overcome the virus. The purpose of our project is to give people a basic understanding of COVID-19 related clinical research and to increase confidence for everyone to defeat the virus.</p>

<p>My main contribution:</p>

<p>You can find all code in our repository.</p>

<h1 id="data-cleaning">Data Cleaning</h1>
<p>Based on my teammates‚Äô basic data cleaning process, I further cleaned the data to make it comply with SQLite3 schema.</p>

<h3 id="1-get-data">1. Get data</h3>
<p>The first step I did was to get the data and take a deep look of the data. Basically, my teammates did the following steps.</p>
<ul>
  <li>selected columns of interests</li>
  <li>cleaned date columns into standard format with month and year</li>
  <li>cleaned locations columns, including country, city of state, instituions</li>
  <li>transferred all letters to upper cases</li>
  <li>replaced ‚Äúnan‚Äù and ‚ÄúNaN‚Äù to <code class="language-plaintext highlighter-rouge">np.nan</code></li>
</ul>

<p>Based on their effort, I found that there are still fields cleaning steps could be optimized and thus further cleaned the data to make them efficient and easy to use.</p>

<h3 id="2-clean-study-design-and-intervention">2. Clean Study Design and Intervention</h3>
<ul>
  <li>Study Design</li>
  <li>
    <p>Intervention
First, I found that there are two fields are JSON-like, which is defined by myself. Strictly speaking, they are not JSON data, but they looked like JSON data. In each cell of them, several pairs of key and value exist, which are mapped by colon and separated by vertical bars. I wrote two funtions which were applied to each row of <code class="language-plaintext highlighter-rouge">Study Design</code> and <code class="language-plaintext highlighter-rouge">Intervention</code> to get the pair of key and value, save the data into real JSON format and then transfer the JSON data into dataframe. Below are examples of <code class="language-plaintext highlighter-rouge">Study Design</code> and <code class="language-plaintext highlighter-rouge">Intervention</code>. We can see that there are ALLOCATION, INTERVENTION MODEL, MASKING and PRIMARY PURPOSE keys inside this <code class="language-plaintext highlighter-rouge">Study Design</code> cell. There are also DRUG and PROCEDURE keys inside this <code class="language-plaintext highlighter-rouge">Intervention</code> cell.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  # Study Design
  'ALLOCATION: RANDOMIZED|INTERVENTION MODEL: SINGLE GROUP ASSIGNMENT|MASKING: TRIPLE (PARTICIPANT, CARE PROVIDER, INVESTIGATOR)|PRIMARY PURPOSE: TREATMENT'
  # Intervention
  'DRUG: DUVELISIB|PROCEDURE: PERIPHERAL BLOOD DRAW
</code></pre></div>    </div>
  </li>
</ul>

<p><br /></p>

<p>Actually, there are more keys inside <code class="language-plaintext highlighter-rouge">Study Design</code> and <code class="language-plaintext highlighter-rouge">Intervention</code>, which is a difficulty here to not miss any of them. My strategy is to first extract all possibles keys and then for each cell find out if any key exists. Eventually, I successfully expand those them and get dataframes. Below is the <code class="language-plaintext highlighter-rouge">Study Design</code> dataframe. We can find that it is super sparse.</p>

<p><img src="/images/final/study-design-df.jpg" alt="" /></p>

<h3 id="3-create-a-sqlite3-schema-following-3nf">3. Create a SQLite3 schema following 3NF</h3>
<p>As introduced in previous post of spotify data normalization, third normal form (3NF) is a database schema design approach for relational databases which uses normalizing principles to reduce the duplication of data, avoid data anomalies, ensure referential integrity, and simplify data management. Therefore, to make our data easy to manipulate, I created a SQLite3 schema following 3NF.</p>

<p>First, I checked and confirmed that there are no duplication and the <code class="language-plaintext highlighter-rouge">NCT Number</code> is the primary key of the data. I have handled JSON-like fields (<code class="language-plaintext highlighter-rouge">Study Design</code> and <code class="language-plaintext highlighter-rouge">Intervention</code>), and there are no other multi-valued attributes and column atomicity are kept. Those two table can be store individually in SQL. However, for the following four fields, <code class="language-plaintext highlighter-rouge">Outcome measures</code>, <code class="language-plaintext highlighter-rouge">Sponsor collaborators</code>, <code class="language-plaintext highlighter-rouge">Funded bys</code>, <code class="language-plaintext highlighter-rouge">Study type</code>, there are several values inside one cell, separated by vertical bars.</p>

<h4 id="handle-multi-valued-attributes">Handle multi-valued attributes</h4>
<ul>
  <li><em>Outcome measures</em>: describes the measurements that are used to determine the effects of intervention or treatment on participants. Types of outcome measures include primary outcome measures, secondary outcome measures, and other pre-specified measures. For observational studies, this section explains the participant groups that are observed and any treatments or exposures that are of interest in the study.</li>
  <li><em>Sponsor collaborators</em>: the study sponsors, which are concrete institution in this dataset</li>
  <li><em>Funded bys</em>: clinical studies can be funded, by pharmaceutical companies, academic medical centers, voluntary groups, and other organizations, in addition to Federal agencies such as the National Institutes of Health, the U.S. Department of Defense, and the U.S. Department of Veterans Affairs.</li>
  <li><em>Study type</em>: describes the nature of a clinical study. Study types include interventional studies (also called clinical trials), observational studies (including patient registries), and expanded access.</li>
</ul>

<p>For example, we could have a ‚ÄòOTHER|NIH‚Äô in <code class="language-plaintext highlighter-rouge">Sponsor collaborators</code> field. What I did was to extract those four columns with <code class="language-plaintext highlighter-rouge">NCT Number</code> separately (i.e. have four tables) and split the columns (i.e. long term). Then, for each of those four table, we cannot have the <code class="language-plaintext highlighter-rouge">NCT Number</code> as the primary key anymore, since we will have duplicate PK. Under this situation, the <code class="language-plaintext highlighter-rouge">NCT Number</code> and <code class="language-plaintext highlighter-rouge">Sponsor collaborators</code> together will be a composite PK and others three tables are similar. We can easily use SQL quries to extrat data.</p>

<p><img src="/images/final/funded_bys.jpg" alt="" /></p>

<h4 id="handle-json-like-field">Handle JSON-like field</h4>
<ol>
  <li>Study Design</li>
  <li>Intervention</li>
</ol>

<h4 id="handle-other-fields">Handle Other fields</h4>
<p>replace NA</p>

<h2 id="3-set-up-sql-server">3. Set up SQL server</h2>

<!-- code -->

<h1 id="exploratory-data-analysis">Exploratory Data Analysis</h1>
<p>Initially, we all did EDA seperately to explore data and get basic sense ourselves.</p>
<ol>
  <li>Study design</li>
  <li>duration</li>
</ol>

<h1 id="openning-status-classification">Openning Status classification</h1>
<p>In the beginning, I plan to predict if the clinical trial will succeed or not based on variable <code class="language-plaintext highlighter-rouge">status</code>. I thought it would be really meaningful to have an idea of this most important sense. But when I looked into the data, I found that the data is highly imbalanced‚Äìit indicates that only one trial is successful, whose status is ‚ÄòAPPROVED FOR MARKETING‚Äô.</p>
<h2 id="1-data-preprocessing">1. Data preprocessing</h2>

<h4 id="further-cleaning">Further cleaning</h4>
<ol>
  <li>age</li>
  <li>gender</li>
  <li>phases</li>
  <li>Study Type</li>
  <li>results</li>
  <li>funded bys</li>
  <li>locations</li>
  <li>duration</li>
</ol>

<h4 id="imputation">Imputation</h4>
<ol>
  <li>enrollment</li>
  <li>duration</li>
</ol>

<h4 id="handling-imbalance-data">Handling imbalance data</h4>

<h2 id="2-modelling">2. Modelling</h2>
<ol>
  <li>Comparing models
I used pycaret to compare models and tuned models.
<!-- plot --></li>
  <li>ROC / confusion matrix / 
difficulty: cannot fit in our env</li>
</ol>

<h2 id="3-insights">3. Insights</h2>
<p>Most important variables
future plan in predicting probability of success</p>

<h1 id="building-dashboard">Building dashboard</h1>
<p>Each of us built our own dashboard page.</p>
<h2 id="1-drawing-plots">1. Drawing Plots</h2>

<h2 id="2-combining-to-streamlit">2. Combining to Streamlit</h2>

<h1 id="reflection-and-conclusion">Reflection and Conclusion</h1>
<p>enviroment imcompatible
github usage</p>

:ET
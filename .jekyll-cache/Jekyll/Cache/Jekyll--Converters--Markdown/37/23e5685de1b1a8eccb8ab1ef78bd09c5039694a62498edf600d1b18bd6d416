I"–³<p>Hello, welcome to my blog! This post will share the data manipulation of <strong><a href="https://ncses.nsf.gov/pubs/nsf19301/data">PhDs awarded in the US</a></strong>.</p>

<p>Please visit my <strong><a href="https://github.com/eveyimi/eveyimi.github.io">GitHub</a></strong> for more information.</p>

<h1 id="introduction">Introduction</h1>

<p>From website Science &amp; Engineering Doctorates we can find the Doctorate Recipients data from U.S. Universities before 2017. These tables present detailed data on the demographic characteristics, educational history, sources of financial support, and postgraduation plans of doctorate recipients. Explore the Survey of Earned Doctorates data further via NCSESâ€™s interactive data tool. By anlyzing those datasets we can get some interesting findings.</p>

<h1 id="preparations">Preparations</h1>
<p>We should first import the necessary packages. You should register first in chart studio to get your username and api_key.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_columns'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_rows'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">dash</span>
<span class="kn">import</span> <span class="nn">dash_core_components</span> <span class="k">as</span> <span class="n">dcc</span>
<span class="kn">import</span> <span class="nn">dash_html_components</span> <span class="k">as</span> <span class="n">html</span>
<span class="kn">import</span> <span class="nn">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="kn">import</span> <span class="nn">chart_studio.plotly</span> <span class="k">as</span> <span class="n">py</span>
<span class="kn">import</span> <span class="nn">plotly.figure_factory</span> <span class="k">as</span> <span class="n">ff</span>
<span class="kn">import</span> <span class="nn">plotly.graph_objects</span> <span class="k">as</span> <span class="n">go</span>
<span class="kn">import</span> <span class="nn">chart_studio</span>
<span class="kn">from</span> <span class="nn">plotly.subplots</span> <span class="kn">import</span> <span class="n">make_subplots</span>

<span class="n">pd</span><span class="p">.</span><span class="n">options</span><span class="p">.</span><span class="n">plotting</span><span class="p">.</span><span class="n">backend</span> <span class="o">=</span> <span class="s">'plotly'</span>
<span class="n">chart_studio</span><span class="p">.</span><span class="n">tools</span><span class="p">.</span><span class="n">set_credentials_file</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="s">''</span><span class="p">,</span> <span class="n">api_key</span><span class="o">=</span><span class="s">''</span><span class="p">)</span></code></pre></figure>

<h1 id="tables">Tables</h1>

<h2 id="table-2">Table 2</h2>
<p>This table describes the Doctorate-granting institutions and doctorate recipients per institution: 1973â€“2017.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">recipient</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">"Doctorate recipients from U.S. colleges and universities 1958â€“2017.xlsx"</span><span class="p">,</span><span class="n">skiprows</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
<span class="n">recipient</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span></code></pre></figure>

<!-- 1 -->

<h3 id="data-visualization">Data visualization</h3>
<p>We first use two bar charts to describe the trends of recipient numbers and institution numbers seperately. We can see that both numbers increase a lot through 1973 to 2017.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">fig</span> <span class="o">=</span> <span class="n">make_subplots</span><span class="p">(</span><span class="n">rows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">cols</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

<span class="n">fig</span><span class="p">.</span><span class="n">add_trace</span><span class="p">(</span><span class="n">go</span><span class="p">.</span><span class="n">Bar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">institution</span><span class="p">[</span><span class="s">'Year'</span><span class="p">],</span>
                <span class="n">y</span><span class="o">=</span><span class="n">institution</span><span class="p">[</span><span class="s">'Total'</span><span class="p">],</span>
                <span class="n">name</span><span class="o">=</span><span class="s">'Total PhD recipients'</span><span class="p">,</span>
                <span class="n">marker_color</span><span class="o">=</span><span class="s">'rgb(55, 83, 109)'</span>                     
                <span class="p">),</span><span class="n">row</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">col</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">add_trace</span><span class="p">(</span><span class="n">go</span><span class="p">.</span><span class="n">Bar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">institution</span><span class="p">[</span><span class="s">'Year'</span><span class="p">],</span>
                <span class="n">y</span><span class="o">=</span><span class="n">institution</span><span class="p">[</span><span class="s">'Doctorate-granting institutions'</span><span class="p">],</span>
                <span class="n">name</span><span class="o">=</span><span class="s">'Doctorate-granting institutions'</span><span class="p">,</span>
                <span class="n">marker_color</span><span class="o">=</span><span class="s">'rgb(26, 118, 255)'</span>
                <span class="p">),</span> <span class="n">row</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">col</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

<span class="n">fig</span><span class="p">.</span><span class="n">update_layout</span><span class="p">(</span><span class="n">height</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span> <span class="n">title_text</span><span class="o">=</span><span class="s">"Doctorate-granting institutions"</span><span class="p">)</span>
<span class="n">py</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s">'instituion_bar'</span><span class="p">,</span> <span class="n">auto_open</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">py</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s">'instituion_bar'</span><span class="p">,</span> <span class="n">auto_open</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 'https://plotly.com/~Yi_/17/'</span></code></pre></figure>

<iframe width="900" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/17/"></iframe>

<p>We can also make a 3D visualization to explain the relationship between Year, Number of PhD recipients and Number of institutions.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="n">scatter_3d</span><span class="p">(</span><span class="n">institution</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="s">"Year"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Doctorate-granting institutions"</span><span class="p">,</span> 
                    <span class="n">z</span><span class="o">=</span><span class="s">"Total"</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="s">"Mean (per institution)"</span><span class="p">,</span>
                    <span class="n">title</span> <span class="o">=</span> <span class="s">"Doctorate-granting institutions and doctorate recipients per institution: 1973â€“2017"</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">py</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s">'instituion'</span><span class="p">,</span> <span class="n">auto_open</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 'https://plotly.com/~Yi_/7/'</span></code></pre></figure>

<iframe width="750" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/7/"></iframe>

<h2 id="table-12">Table 12</h2>
<p>This table describes the Doctorate recipients, by major field of study: Selected years, 1987â€“2017.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">major</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">"Doctorate recipients, by major field of study 1987â€“2017.xlsx"</span><span class="p">,</span><span class="n">skiprows</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
<span class="n">major</span> <span class="o">=</span> <span class="n">major</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">13</span><span class="p">]]</span>
<span class="n">major</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"Field of study"</span> <span class="p">,</span><span class="s">"1987"</span><span class="p">,</span><span class="s">"1992"</span><span class="p">,</span><span class="s">"1997"</span><span class="p">,</span><span class="s">"2002"</span><span class="p">,</span><span class="s">"2007"</span><span class="p">,</span><span class="s">"2012"</span><span class="p">,</span><span class="s">"2017"</span><span class="p">]</span>
<span class="n">major_list</span> <span class="o">=</span> <span class="p">[</span><span class="s">"Life sciences"</span><span class="p">,</span><span class="s">"Physical sciences and earth sciences"</span><span class="p">,</span>
              <span class="s">"Mathematics and computer sciences"</span><span class="p">,</span> <span class="s">"Psychology and social sciences"</span><span class="p">,</span>
              <span class="s">"Engineering"</span><span class="p">,</span><span class="s">"Education"</span><span class="p">,</span><span class="s">"Humanities and arts"</span><span class="p">,</span><span class="s">"Othera"</span><span class="p">]</span>
<span class="n">major</span><span class="p">[</span><span class="s">"Major"</span><span class="p">]</span> <span class="o">=</span> <span class="s">'NA'</span>
<span class="n">test</span> <span class="o">=</span> <span class="n">major</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">test</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
    <span class="k">if</span> <span class="n">test</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span> <span class="ow">in</span> <span class="n">major_list</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">test</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span>
        <span class="k">while</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">major</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="ow">and</span> <span class="n">test</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">j</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">major_list</span><span class="p">:</span>
            <span class="n">test</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">j</span><span class="p">,</span><span class="mi">8</span><span class="p">]</span> <span class="o">=</span> <span class="n">test</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span>
            <span class="n">j</span><span class="o">+=</span><span class="mi">1</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">test</span><span class="p">[</span><span class="o">~</span><span class="n">test</span><span class="p">[</span><span class="s">'Major'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="n">contains</span><span class="p">(</span><span class="s">"NA"</span><span class="p">)]</span>
<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">id_vars</span><span class="o">=</span><span class="p">[</span><span class="s">'Major'</span><span class="p">,</span> <span class="s">'Field of study'</span><span class="p">],</span> <span class="n">var_name</span><span class="o">=</span><span class="s">'Year'</span><span class="p">,</span> <span class="n">value_name</span><span class="o">=</span><span class="s">'Num'</span><span class="p">)</span>
<span class="n">df1</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span></code></pre></figure>

<!-- 2 -->

<h3 id="data-visualization-1">Data visualization</h3>
<p>We visualization the data by grouping majors and showing with the same color of sub-majors. From the line plot we can see that the Biological and biomedical science sub-major in Life sciences	major has the most number of doctorate recipients and increases the most. And the sub-major who ranks second is Psychology in major Psychology and social sciences.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="n">line</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="s">"Year"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">"Major"</span><span class="p">,</span>
              <span class="n">line_group</span><span class="o">=</span><span class="s">"Field of study"</span><span class="p">,</span> <span class="n">hover_name</span><span class="o">=</span><span class="s">"Field of study"</span><span class="p">,</span>
              <span class="n">title</span><span class="o">=</span><span class="s">'Doctorate recipients, by major field of study: 1987â€“2017'</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">py</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s">'major_field_of_study'</span><span class="p">,</span> <span class="n">auto_open</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 'https://plotly.com/~Yi_/9/'</span></code></pre></figure>

<iframe width="900" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/9/"></iframe>

<h2 id="table-12-1">Table 12</h2>
<p>This table describes the Highest educational attainment of either parent of doctorate recipients: Selected years, 1987â€“2017.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">highest_edu</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">"Highest educational attainment of either parent of doctorate recipients.xlsx"</span><span class="p">,</span> <span class="n">skiprows</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
<span class="n">highest_edu</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">melt</span><span class="p">(</span><span class="n">highest_edu</span><span class="p">,</span> <span class="n">id_vars</span><span class="o">=</span><span class="p">[</span><span class="s">'Year'</span><span class="p">],</span> <span class="n">var_name</span><span class="o">=</span><span class="s">'Education'</span><span class="p">,</span> <span class="n">value_name</span><span class="o">=</span><span class="s">'Num'</span><span class="p">)</span>
<span class="n">highest_edu</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span></code></pre></figure>

<!-- 3 -->

<h3 id="data-visualization-2">Data visualization</h3>
<p>We visualization the data by grouping majors and showing with the same color of sub-majors. From the line plot we can see that the Biological and biomedical science sub-major in Life sciences	major has the most number of doctorate recipients and increases the most. And the sub-major who ranks second is Psychology in major Psychology and social sciences.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">highest_edu</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="s">"Year"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">"Education"</span><span class="p">,</span>
           <span class="n">hover_name</span><span class="o">=</span><span class="s">"Education"</span><span class="p">,</span> <span class="n">log_x</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">size_max</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">py</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s">'education_multiple'</span><span class="p">,</span> <span class="n">auto_open</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 'https://plotly.com/~Yi_/20/'</span></code></pre></figure>

<iframe width="900" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/20/"></iframe>

<h2 id="table-12-2">Table 12</h2>
<p>This table describes the Highest educational attainment of either parent of doctorate recipients: Selected years, 1987â€“2017.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">highest_edu</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">"Highest educational attainment of either parent of doctorate recipients.xlsx"</span><span class="p">,</span> <span class="n">skiprows</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
<span class="n">highest_edu</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">melt</span><span class="p">(</span><span class="n">highest_edu</span><span class="p">,</span> <span class="n">id_vars</span><span class="o">=</span><span class="p">[</span><span class="s">'Year'</span><span class="p">],</span> <span class="n">var_name</span><span class="o">=</span><span class="s">'Education'</span><span class="p">,</span> <span class="n">value_name</span><span class="o">=</span><span class="s">'Num'</span><span class="p">)</span>
<span class="n">highest_edu</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span></code></pre></figure>

<!-- 3 -->

<h3 id="data-visualization-3">Data visualization</h3>
<p>We visualization the data by grouping majors and showing with the same color of sub-majors. From the line plot we can see that the Biological and biomedical science sub-major in Life sciences	major has the most number of doctorate recipients and increases the most. And the sub-major who ranks second is Psychology in major Psychology and social sciences.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">highest_edu</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="s">"Year"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">"Education"</span><span class="p">,</span>
           <span class="n">hover_name</span><span class="o">=</span><span class="s">"Education"</span><span class="p">,</span> <span class="n">log_x</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">size_max</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">py</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s">'education_multiple'</span><span class="p">,</span> <span class="n">auto_open</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 'https://plotly.com/~Yi_/20/'</span></code></pre></figure>

<iframe width="900" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/20/"></iframe>

<h2 id="table-12-3">Table 12</h2>
<p>This table describes the Highest educational attainment of either parent of doctorate recipients: Selected years, 1987â€“2017.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">highest_edu</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">"Highest educational attainment of either parent of doctorate recipients.xlsx"</span><span class="p">,</span> <span class="n">skiprows</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
<span class="n">highest_edu</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">melt</span><span class="p">(</span><span class="n">highest_edu</span><span class="p">,</span> <span class="n">id_vars</span><span class="o">=</span><span class="p">[</span><span class="s">'Year'</span><span class="p">],</span> <span class="n">var_name</span><span class="o">=</span><span class="s">'Education'</span><span class="p">,</span> <span class="n">value_name</span><span class="o">=</span><span class="s">'Num'</span><span class="p">)</span>
<span class="n">highest_edu</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span></code></pre></figure>

<!-- 3 -->

<h3 id="data-visualization-4">Data visualization</h3>
<p>We visualization the data by grouping majors and showing with the same color of sub-majors. From the line plot we can see that the Biological and biomedical science sub-major in Life sciences	major has the most number of doctorate recipients and increases the most. And the sub-major who ranks second is Psychology in major Psychology and social sciences.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">highest_edu</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="s">"Year"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">"Education"</span><span class="p">,</span>
           <span class="n">hover_name</span><span class="o">=</span><span class="s">"Education"</span><span class="p">,</span> <span class="n">log_x</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">size_max</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">py</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s">'education_multiple'</span><span class="p">,</span> <span class="n">auto_open</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 'https://plotly.com/~Yi_/20/'</span></code></pre></figure>

<iframe width="900" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/20/"></iframe>

<h2 id="table-35">Table 35</h2>
<p>This table describes the Doctorate recipientsâ€™ primary source of financial support, by broad field of study, sex, citizenship status, ethnicity, and race: 2017</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">highest_edu</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s">"Highest educational attainment of either parent of doctorate recipients.xlsx"</span><span class="p">,</span> <span class="n">skiprows</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
<span class="n">highest_edu</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">melt</span><span class="p">(</span><span class="n">highest_edu</span><span class="p">,</span> <span class="n">id_vars</span><span class="o">=</span><span class="p">[</span><span class="s">'Year'</span><span class="p">],</span> <span class="n">var_name</span><span class="o">=</span><span class="s">'Education'</span><span class="p">,</span> <span class="n">value_name</span><span class="o">=</span><span class="s">'Num'</span><span class="p">)</span>
<span class="n">highest_edu</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span></code></pre></figure>

<!-- 3 -->

<h3 id="data-visualization-5">Data visualization</h3>
<p>We visualization the data by grouping majors and showing with the same color of sub-majors. From the line plot we can see that the Biological and biomedical science sub-major in Life sciences	major has the most number of doctorate recipients and increases the most. And the sub-major who ranks second is Psychology in major Psychology and social sciences.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">highest_edu</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="s">"Year"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="s">"Num"</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">"Education"</span><span class="p">,</span>
           <span class="n">hover_name</span><span class="o">=</span><span class="s">"Education"</span><span class="p">,</span> <span class="n">log_x</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">size_max</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">py</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s">'education_multiple'</span><span class="p">,</span> <span class="n">auto_open</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 'https://plotly.com/~Yi_/20/'</span></code></pre></figure>

<iframe width="900" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/20/"></iframe>

<iframe width="750" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/11/"></iframe>
<iframe width="750" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/13/"></iframe>
<iframe width="750" height="500" frameborder="0" scrolling="no" src="//plotly.com/~Yi_/15/"></iframe>

<h1 id="consume-data">Consume data</h1>
<p>Using the below code to consume data using Star Wars API, we find that there are 82 people in total.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">base_url</span> <span class="o">=</span> <span class="s">'https://swapi.dev/api/people'</span>
<span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">base_url</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">resp</span><span class="p">.</span><span class="n">json</span><span class="p">()</span></code></pre></figure>

<p><br />
Then, try to consume them one by one until we get all 82 people data and use a list to store all the JSON data.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">people</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># we will stop consuming until the count is 82
</span><span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">base_url</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">))).</span><span class="n">json</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">r</span> <span class="o">==</span> <span class="p">{</span><span class="s">'detail'</span><span class="p">:</span> <span class="s">'Not found'</span><span class="p">}:</span>
        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">continue</span>
    <span class="n">people</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
    <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">if</span> <span class="n">count</span> <span class="o">==</span> <span class="n">data</span><span class="p">[</span><span class="s">'count'</span><span class="p">]:</span>
        <span class="k">break</span> </code></pre></figure>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    [{'name': 'Luke Skywalker',
    'height': '172',
    'mass': '77',
    'hair_color': 'blond',
    'skin_color': 'fair',
    'eye_color': 'blue',
    'birth_year': '19BBY',
    'gender': 'male',
    'homeworld': 'http://swapi.dev/api/planets/1/',
    'films': ['http://swapi.dev/api/films/1/',
    'http://swapi.dev/api/films/2/',
    'http://swapi.dev/api/films/3/',
    'http://swapi.dev/api/films/6/'],
    'species': [],
    'vehicles': ['http://swapi.dev/api/vehicles/14/',
    'http://swapi.dev/api/vehicles/30/'],
    'starships': ['http://swapi.dev/api/starships/12/',
    'http://swapi.dev/api/starships/22/'],
    'created': '2014-12-09T13:50:51.644000Z',
    'edited': '2014-12-20T21:17:56.891000Z',
    'url': 'http://swapi.dev/api/people/1/'},
    {'name': 'C-3PO',
    'height': '167',
    'mass': '75',
    'hair_color': 'n/a',
    'skin_color': 'gold',
    'eye_color': 'yellow',
    'birth_year': '112BBY',
    'gender': 'n/a',
    'homeworld': 'http://swapi.dev/api/planets/1/',
    'films': ['http://swapi.dev/api/films/1/',
    'http://swapi.dev/api/films/2/',
    'http://swapi.dev/api/films/3/',
    'http://swapi.dev/api/films/4/',
    'http://swapi.dev/api/films/5/',
    'http://swapi.dev/api/films/6/'],
    'species': ['http://swapi.dev/api/species/2/'],
    'vehicles': [],
    'starships': [],
    'created': '2014-12-10T15:10:51.357000Z',
    'edited': '2014-12-20T21:17:50.309000Z',
    'url': 'http://swapi.dev/api/people/2/'},
    {'name': 'R2-D2',
    'height': '96',
    'mass': '32',
    'hair_color': 'n/a',
    'skin_color': 'white, blue',
    'eye_color': 'red',
    'birth_year': '33BBY',
    'gender': 'n/a',
    'homeworld': 'http://swapi.dev/api/planets/8/',
    'films': ['http://swapi.dev/api/films/1/',
    'http://swapi.dev/api/films/2/',
    'http://swapi.dev/api/films/3/',
    'http://swapi.dev/api/films/4/',
    'http://swapi.dev/api/films/5/',
    'http://swapi.dev/api/films/6/'],
    'species': ['http://swapi.dev/api/species/2/'],
    'vehicles': [],
    'starships': [],
    'created': '2014-12-10T15:11:50.376000Z',
    'edited': '2014-12-20T21:17:50.311000Z',
    'url': 'http://swapi.dev/api/people/3/'},
    ... ...
</code></pre></div></div>

<p><br />
We are required to provide the name of films each people appeared in. The raw people data only contains the URL of the films as below.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">people</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="s">'films'</span><span class="p">]</span></code></pre></figure>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    ['http://swapi.dev/api/films/1/',
    'http://swapi.dev/api/films/2/',
    'http://swapi.dev/api/films/3/',
    'http://swapi.dev/api/films/6/']
</code></pre></div></div>

<p><br />
And each film API contains the below information, taking the first people as an example.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">people</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="s">'films'</span><span class="p">][</span><span class="mi">0</span><span class="p">]).</span><span class="n">json</span><span class="p">()</span></code></pre></figure>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    {'title': 'A New Hope',
    'episode_id': 4,
    'opening_crawl': "It is a period of civil war.\r\nRebel spaceships, striking\r\nfrom a hidden base, have won\r\ntheir first victory against\r\nthe evil Galactic Empire.\r\n\r\nDuring the battle, Rebel\r\nspies managed to steal secret\r\nplans to the Empire's\r\nultimate weapon, the DEATH\r\nSTAR, an armored space\r\nstation with enough power\r\nto destroy an entire planet.\r\n\r\nPursued by the Empire's\r\nsinister agents, Princess\r\nLeia races home aboard her\r\nstarship, custodian of the\r\nstolen plans that can save her\r\npeople and restore\r\nfreedom to the galaxy....",
    'director': 'George Lucas',
    'producer': 'Gary Kurtz, Rick McCallum',
    'release_date': '1977-05-25',
    'characters': ['http://swapi.dev/api/people/1/',
    'http://swapi.dev/api/people/2/',
    'http://swapi.dev/api/people/3/',
    'http://swapi.dev/api/people/4/',
    'http://swapi.dev/api/people/5/',
</code></pre></div></div>

<p><br />
We need to use the request library again to get all the names.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">'count'</span><span class="p">]):</span>
    <span class="n">people</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'film_name'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">people</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'films'</span><span class="p">]:</span>
        <span class="n">film</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">item</span><span class="p">).</span><span class="n">json</span><span class="p">()</span>
        <span class="n">people</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'film_name'</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">film</span><span class="p">[</span><span class="s">'title'</span><span class="p">])</span>     </code></pre></figure>

<p><br />
Then we transfrom the JSON data into a dataframe.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">json_normalize</span><span class="p">(</span><span class="n">people</span><span class="p">)</span></code></pre></figure>

<p><img src="/images/HW5/1.png" alt="1" />
<em>Dataframe - 1</em>
<img src="/images/HW5/2.png" alt="1" />
<em>Dataframe - 2</em></p>

<h1 id="the-oldest-person">The oldest person</h1>
<p>BBY means Before the Battle of Yavin. If we want to find out the oldest person, we need to find the person with the biggest number before BBY. First we need to remove the <code class="language-plaintext highlighter-rouge">BBY</code> from the birth yeas. Then we can find the index of the oldest person.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">df_birth</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">'birth_year'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="n">contains</span><span class="p">(</span><span class="s">"BBY"</span><span class="p">)]</span>
<span class="n">idx</span> <span class="o">=</span> <span class="n">df_birth</span><span class="p">[(</span><span class="n">df_birth</span><span class="p">[</span><span class="s">'birth_year'</span><span class="p">]</span><span class="o">==</span><span class="nb">max</span><span class="p">(</span><span class="n">df_birth</span><span class="p">[</span><span class="s">'birth_year'</span><span class="p">]))].</span><span class="n">index</span></code></pre></figure>

<p>We then use the index to find the peopleâ€™s name, which is <code class="language-plaintext highlighter-rouge">Yoda</code>.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">df_birth</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">][</span><span class="s">'name'</span><span class="p">].</span><span class="n">to_list</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span></code></pre></figure>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    'Yoda'
</code></pre></div></div>

<p><br />
Then we can figure out the titles of all the films she appeared in.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">df_birth</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">][</span><span class="s">'film_name'</span><span class="p">].</span><span class="n">to_list</span><span class="p">()</span></code></pre></figure>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    [['The Empire Strikes Back',
    'Return of the Jedi',
    'The Phantom Menace',
    'Attack of the Clones',
    'Revenge of the Sith']]
</code></pre></div></div>

<p><br /></p>

:ET